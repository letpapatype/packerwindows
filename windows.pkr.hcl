    task = "Image deployment"
  }
  build_resource_group_name         = "${var.resource_group}"
  subscription_id                   = "${var.subscription_id}"
  client_id                         = "${var.client_id}"
  client_secret                     = "${var.client_secret}"
  communicator                      = "winrm"
  image_offer                       = "Windows-10"
  image_publisher                   = "MicrosoftwindowsDesktop"
  image_sku                         = "win10-22h2-pro"
  managed_image_name                = "WinDevTest1"
  managed_image_resource_group_name = "${var.resource_group}"
  os_type                           = "Windows"
  tenant_id                         = "${var.tenant_id}"
  vm_size                           = "Standard_DS1_v2"
  winrm_insecure                    = true
  winrm_timeout                     = "5m"
  winrm_use_ssl                     = true
  winrm_username                    = "packer"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]

  provisioner "powershell" {
    inline = ["Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"]
  }

  provisioner "powershell" {
    inline = ["exit"]
  }

  provisioner "powershell" {
    elevated_user     = "packer"
    elevated_password = build.Password
    inline            = ["choco install git -y",  "choco install vscode -y"]
  }

  provisioner "powershell" {
    elevated_user     = "packer"
    elevated_password = build.Password
    inline = ["Add-WindowsFeature Web-Server", "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }", "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }", "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit", "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"]
  }
  
}
